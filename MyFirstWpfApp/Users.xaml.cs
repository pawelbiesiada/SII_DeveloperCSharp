//using CSharpConsole.Exercises;
using Microsoft.EntityFrameworkCore;
using MyFirstWpfApp.Exercises.Model;
using System.Linq;
using System.Windows;
using System.Windows.Controls;

namespace MyFirstWpfApp
{
    /// <summary>
    /// Interaction logic for Users.xaml
    /// </summary>
    public partial class Users : Window
    {
        private EftestDbContext _ctx;

        public Users()
        {
            InitializeComponent();
        }

        private void cbxUsers_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            var cbx = sender as ComboBox;
            if (cbx is null)
                return;

            var selectedElement = cbx.SelectedItem as User;

            if (selectedElement is null)
                return;

            grdUsers.SelectedItem = selectedElement;

            txtId.Text = selectedElement.Id.ToString();
            txtName.Text = selectedElement.Name;
            txtIsActive.Text = selectedElement.IsActive.ToString();
            txtPassword.Text = selectedElement.Password;
        }



        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            if(_ctx is null)
            {
                _ctx = new EftestDbContext();
            }

            //var users = CreateCollection.GetUsers()
            //    .Where(u => u is not null)
            //    .OrderBy(u => u.Id)
            //    .ToArray();

            _ctx.Users.Load();
            var users = _ctx.Users.Local.ToBindingList();

            cbxUsers.ItemsSource = users;
            grdUsers.ItemsSource = users;


            cbxUsers.SelectedItem = cbxUsers.ItemsSource.OfType<User>().FirstOrDefault();
        }

        private void btnTest_Click(object sender, RoutedEventArgs e)
        {
            var testMainView = new MainWindow();
            testMainView.ShowDialog();

            if(!string.IsNullOrEmpty(testMainView.SelectedName))
            {
                MessageBox.Show(testMainView.SelectedName);
            }
        }

        private void grdUsers_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            cbxUsers.SelectedItem = grdUsers.SelectedItem;
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            _ctx.SaveChanges();
        }

        private void grdUsers_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            if(e.Column.IsAutoGenerated)
            {
                e.Cancel = true;
                return;
            }
        }
    }
}
